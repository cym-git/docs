(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{286:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#process"}},[t._v("#")]),t._v(" process")]),t._v(" "),s("h2",{attrs:{id:"进程对象属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程对象属性"}},[t._v("#")]),t._v(" 进程对象属性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("execPath")]),t._v(" "),s("td",[t._v("可执行文件的绝对路径，如 "),s("code",[t._v("/usr/local/bin/node")])])]),t._v(" "),s("tr",[s("td",[t._v("version")]),t._v(" "),s("td",[t._v("版本号")])]),t._v(" "),s("tr",[s("td",[t._v("versions")]),t._v(" "),s("td",[t._v("依赖库的版本号")])]),t._v(" "),s("tr",[s("td",[t._v("platform")]),t._v(" "),s("td",[t._v("运行平台 darwin(Mac)、freebsd、linux、sunos、win32")])]),t._v(" "),s("tr",[s("td",[t._v("stdin")]),t._v(" "),s("td",[t._v("标准输入流可读流，默认暂停状态")])]),t._v(" "),s("tr",[s("td",[t._v("stdout")]),t._v(" "),s("td",[t._v("标准输出流可写流，同步操作")])]),t._v(" "),s("tr",[s("td",[t._v("stderr")]),t._v(" "),s("td",[t._v("错误输出可写流，同步操作")])]),t._v(" "),s("tr",[s("td",[t._v("argv")]),t._v(" "),s("td",[t._v("命令行参数，属性为数组")])]),t._v(" "),s("tr",[s("td",[t._v("env")]),t._v(" "),s("td",[t._v("操作系统的环境信息")])]),t._v(" "),s("tr",[s("td",[t._v("pid")]),t._v(" "),s("td",[t._v("应用程序的进程 id")])]),t._v(" "),s("tr",[s("td",[t._v("title")]),t._v(" "),s("td",[t._v("窗口标题")])]),t._v(" "),s("tr",[s("td",[t._v("arch")]),t._v(" "),s("td",[t._v("处理器架构 arm ia32 x64")])])])]),t._v(" "),s("h2",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("h3",{attrs:{id:"memoryusage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#memoryusage"}},[t._v("#")]),t._v(" memoryUsage")]),t._v(" "),s("p",[t._v("查看内存的使用情况，会返回一个对象，node v8 引擎内存使用量是有上限的，32 位最多是 0.7G；64 位最多使用 1.7G")]),t._v(" "),s("ul",[s("li",[t._v("rss（resident set size）：所有内存占用，包括指令区和堆栈")]),t._v(" "),s("li",[t._v("heapTotal：堆占用的内存，包括用到的和未用到的")]),t._v(" "),s("li",[t._v("heapUsed：用到堆的部分")]),t._v(" "),s("li",[t._v("external：v8 引擎内部的 C++ 占用的内存（buffer 是单独分配的，属于 external 内存）")])]),t._v(" "),s("h3",{attrs:{id:"nexttick"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nexttick"}},[t._v("#")]),t._v(" nextTick")]),t._v(" "),s("p",[t._v("用于将一个函数推迟到代码所书写的下一个同步方法执行完毕或者异步方法的回调函数开始执行前调用")]),t._v(" "),s("h3",{attrs:{id:"chdir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chdir"}},[t._v("#")]),t._v(" chdir")]),t._v(" "),s("p",[t._v("chdir 用于修改 node 应用程序中使用的当前工作目录，使用方法： "),s("code",[t._v("process.chdir(directory)")])]),t._v(" "),s("h3",{attrs:{id:"cwd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cwd"}},[t._v("#")]),t._v(" cwd")]),t._v(" "),s("p",[t._v("返回当前目录")]),t._v(" "),s("h3",{attrs:{id:"exit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exit"}},[t._v("#")]),t._v(" exit")]),t._v(" "),s("p",[t._v("退出 node 应用程序的进程")]),t._v(" "),s("h3",{attrs:{id:"kill"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kill"}},[t._v("#")]),t._v(" kill")]),t._v(" "),s("p",[t._v("用于向进程发送一个信号")]),t._v(" "),s("ul",[s("li",[t._v("SIGINT 程序终止（interrupt）信号，在用户输入 INTR 字符（Ctrl + c）时发出，用户通知前台进程组终止进程")]),t._v(" "),s("li",[t._v("SIGTERM 程序结束（terminate）信号，该信号可以被阻塞和处理，通常用来要求程序自己正常退出，shell 命令 kill 缺省产生这个信号")])]),t._v(" "),s("p",[t._v("用法： "),s("code",[t._v("process.kill(pid, [signal])")])]),t._v(" "),s("ul",[s("li",[t._v("pid 是进程 id，整数类型")]),t._v(" "),s("li",[t._v("signal 发送的信号，默认是 SIGTERM")])]),t._v(" "),s("h3",{attrs:{id:"uptime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uptime"}},[t._v("#")]),t._v(" uptime")]),t._v(" "),s("p",[t._v("返回当前程序的运行时间")]),t._v(" "),s("h3",{attrs:{id:"hrtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hrtime"}},[t._v("#")]),t._v(" hrtime")]),t._v(" "),s("p",[t._v("测试一个代码段的运行时间，返回两个时间，第一个单位是秒，第二个是纳秒，类似于 "),s("code",[t._v("console.timeEnd")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hrtime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" diff "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hrtime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("该程序执行耗时 %d 秒")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" diff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"exit-事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exit-事件"}},[t._v("#")]),t._v(" exit 事件")]),t._v(" "),s("p",[t._v("当 node 程序退出时会触发进程对象的 exit 事件，可以通过指定事件回调来指定进程退出时所执行的处理")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exit'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node 程序退出了'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprocess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"uncaughtexception-事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uncaughtexception-事件"}},[t._v("#")]),t._v(" uncaughtException 事件")]),t._v(" "),s("p",[t._v("当应用程序抛出一个未被捕获的异常时触发进程对象的 "),s("code",[t._v("uncaughtException")]),t._v(" 事件，一般不用")]),t._v(" "),s("h2",{attrs:{id:"子进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子进程"}},[t._v("#")]),t._v(" 子进程")]),t._v(" "),s("blockquote",[s("p",[t._v("在 node 中，只有一个线程执行所有操作，如果某个操作需要大量消耗 CPU 资源的情况下，后续操作都要等待 "),s("br"),t._v("\n所以在 node 中提供了一个 "),s("code",[t._v("child_process")]),t._v(" 模块，通过他可以开启多个子进程，在多个子进程之间可以共享内存空间，可以通过子进程的互相通信来实现信息的交换")])]),t._v(" "),s("h3",{attrs:{id:"spawn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spawn"}},[t._v("#")]),t._v(" spawn")]),t._v(" "),s("h4",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("child_process.spawn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("command：必须指定的参数，指定需要执行的命令")]),t._v(" "),s("li",[t._v("args：数组，存放了所有运行该命令需要的参数")]),t._v(" "),s("li",[t._v("options：对象，用于指定开启子进程时使用的选项")])]),t._v(" "),s("h3",{attrs:{id:"fork-开启子进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fork-开启子进程"}},[t._v("#")]),t._v(" fork 开启子进程")])])}),[],!1,null,null,null);s.default=e.exports}}]);